import { __COMPONENT___REDUCER_KEY } from './constants';
import { Reducer } from 'redux';

import { __Component__Actions } from './actions';
import { IAPIError, ILocalState } from 'state';
import { produce } from 'utils/produce';

export interface I__Component__StateType extends ILocalState {
    readonly id?: string;
    readonly errors: {
        weatherForcast?: IAPIError;
    };
    readonly loadings: {
        weatherForcast?: boolean;
    };
}
export const initialState: I__Component__StateType = {
    errors: {},
    loadings: {},
};

const reducer: Reducer<I__Component__StateType, __Component__Actions> = (state = initialState, action) =>
    produce(state, (draft) => {
        switch (action.type) {
            case __COMPONENT___REDUCER_KEY.ACTION:
                draft.id = action.params;
                break;
            default:
                break;
        }
    });

export default reducer;
